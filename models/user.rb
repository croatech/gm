require 'sequel'

class User < Sequel::Model
  attr_accessor :id

  def validate
    errors.add(:mac_address, 'cannot be empty') if mac_address.nil?
    validates_format /^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$/i, :mac_address
  end

  def self.authorize!(env)
    auth_value = env.select { |key, _| key.include?('HTTP_') }['HTTP_AUTHORIZATION']
    User.where(mac_address: auth_value).first
  end
end

# Table: users
# Columns:
#  id          | integer | PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY
#  mac_address | text    | NOT NULL
# Indexes:
#  users_pkey            | PRIMARY KEY btree (id)
#  users_mac_address_key | UNIQUE btree (mac_address)
